---
- name: Include Variables
  include_vars: "{{ ansible_os_family }}.yml"
  when: ansible_os_family != "Darwin"

- name: Determine Homebrew ownership variables
  set_fact:
    homebrew_user: '{{ homebrew_user | default(ansible_user_id) }}'
    homebrew_group: '{{ homebrew_group | default(ansible_user_gid) }}'

- name: Install on Darwin
  include_tasks: setup-Darwin.yml
  when: ansible_os_family == "Darwin"

- name: Install on Linux
  include_tasks: setup-Linux.yml
  when: ansible_os_family != "Darwin"

- name: Clone Homebrew
  git:
    repo: "{{ homebrew_repo }}"
    version: master
    dest: "{{ homebrew_install_path }}"
    update: false
    depth: 1
  become: true
  become_user: "{{ homebrew_user }}"

- name: Adjust Homebrew binary directory permissions
  file:
    path: "{{ homebrew_brew_bin_path }}"
    state: directory
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    mode: 0775
  become: true

- name: Adjust Homebrew subdirectories permissions
  file:
    path: "{{ homebrew_install_path }}"
    state: directory
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
  become: true

- name: Verify Homebrew is in the correct directory
  stat:
    path: "{{ homebrew_brew_bin_path }}/brew"
  register: homebrew_binary
  check_mode: false

- name: Symlink brew to its binary path
  file:
    src: "{{ homebrew_install_path }}/bin/brew"
    dest: "{{ homebrew_brew_bin_path }}/brew"
    state: link
  when: not homebrew_binary.stat.exists
  become: true

- name: Ensure all Homebrew folders are in place
  file:
    path: "{{ homebrew_prefix }}/{{ item }}"
    state: directory
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
  become: true
  with_items:
    - "{{ homebrew_folders_additional }}"
    - "{{ homebrew_folders_base }}"

- block:
    - name: Update Homebrew after installation is completed
      command: "{{ homebrew_brew_bin_path }}/brew update --force"
      when: not homebrew_binary.stat.exists

    - name: Find Homebrew cache path
      command: "{{ hombrew_brew_bin_path }}/brew --cache"
      register: homebrew_cache_path
      check_mode: false

    - name: tap external Homebrew repositories
      include_tasks: tap.yml

    - name: Install additional Cask applications
      include_tasks: cask.yml

    - name: Install additional brew's
      include_tasks: brew.yml

    - name: Check for Brewfile
      stat:
        path: "{{ homebrew_brewfile_dir }}/Brewfile"
      register: homebrew_brewfile
      check_mode: false

    - name: Install applications from Brewfile
      include_tasks: brewfile.yml
      when: homebrew_brewfile.stat.exists and homebrew_use_brewfile

  become: "{{ homebrew_user != ansible_user_id | bool }}"
  become_user: "{{ homebrew_user }}"
